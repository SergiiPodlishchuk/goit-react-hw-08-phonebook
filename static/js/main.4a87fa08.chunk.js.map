{"version":3,"sources":["routes.js","redux/auth/authSelectors.js","components/PublicRoute.js","components/PrivateRoute.js","components/AuthMenu.js","components/UserMenu/UserMenu.js","components/App.js","redux/contacts/contactReducer.js","redux/auth/authReducer.js","redux/store.js","index.js","redux/auth/authActions.js","services/fetchAuth.js","redux/contacts/contactAction.js"],"names":["path","label","exact","component","lazy","private","restricted","state","auth","token","user","name","loadingUser","connect","isAuthenticated","authSelectors","Component","routeProps","render","props","to","routePath","routes","map","route","routeLabel","className","activeClassName","onLogout","authOperations","logout","type","onClick","App","this","onGetCurrentUser","isLogin","isUserLoading","fallback","color","height","width","timeout","key","getCurrentUser","items","createReducer","contactAction","fetchContactsSuccess","_","payload","addContactsSuccess","removeContactsSuccess","filter","id","changeFilter","loading","fetchContactsRequest","fetchContactsError","addContactsRequest","addContactsError","removeContactsRequest","removeContactsError","combineReducers","INITIAL_USER","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","error","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","authPersisstCOnfig","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","then","response","console","log","data","catch","message","login","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.4a87fa08.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/LoginView\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/RegisterView\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/ContactsViews\")),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","const isLogin = (state) => state.auth.token;\r\nconst isUserLoad = (state) => state.auth.loadingUser;\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport default { isLogin, getUserName, isUserLoad };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"../redux/auth/authSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"../redux/auth/authSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport routes from \"../routes\";\r\n\r\nimport authSelectors from \"../redux/auth/authSelectors\";\r\n\r\nconst routePath = routes.map((route) => route.path);\r\nconst routeLabel = routes.map((route) => route.label);\r\n\r\nconst AuthMenu = () => (\r\n  <>\r\n    <ul className=\"Navigation_log-reg\">\r\n      <li>\r\n        <NavLink\r\n          to={routePath[0]}\r\n          className=\"Navigation-link\"\r\n          activeClassName=\"Navigation-link-active\"\r\n        >\r\n          {routeLabel[0]}\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          to={routePath[1]}\r\n          className=\"Navigation-link\"\r\n          activeClassName=\"Navigation-link-active\"\r\n        >\r\n          {routeLabel[1]}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthMenu);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport authOperations from \"../../services/fetchAuth\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nconst UserMenu = ({ name, onLogout }) => {\r\n  return (\r\n    <div className=\"userMenu\">\r\n      <p>Welcome, {name} !!!</p>\r\n      <button type=\"submit\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateTorops = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n});\r\n\r\nexport default connect(mapStateTorops, {\r\n  onLogout: authOperations.logout,\r\n})(UserMenu);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Switch, BrowserRouter } from \"react-router-dom\";\r\n// import { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"../../node_modules/react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport routes from \"../routes\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nimport AuthMenu from \"./AuthMenu\";\r\nimport UserMenu from \"../components/UserMenu/UserMenu\";\r\n\r\nimport authSelectors from \"../redux/auth/authSelectors\";\r\nimport authOperations from \"../services/fetchAuth\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    const { isLogin, isUserLoading } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <BrowserRouter>\r\n          <div className=\"Navigation\">\r\n            {isLogin && (\r\n              <NavLink to=\"/contacts\" className=\"Contacts_title\">\r\n                Contacts\r\n              </NavLink>\r\n            )}\r\n            <div></div>\r\n            <div>{isLogin && !isUserLoading ? <UserMenu /> : <AuthMenu />}</div>\r\n          </div>\r\n          <Suspense\r\n            fallback={\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#f5f505\"\r\n                height={50}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n              />\r\n            }\r\n          >\r\n            <Switch>\r\n              {routes.map((route) => {\r\n                return route.private ? (\r\n                  <PrivateRoute key={route.path} {...route} />\r\n                ) : (\r\n                  <PublicRoute\r\n                    key={route.path}\r\n                    {...route}\r\n                    restricted={route.restricted}\r\n                  />\r\n                );\r\n              })}\r\n            </Switch>\r\n          </Suspense>\r\n        </BrowserRouter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n  isUserLoading: authSelectors.isUserLoad(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n\r\n// {\"name\":\"qwer\",\"email\":\"qwer@qwer.com\",\"password\":\"qwertyuio\"}\"\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport contactAction from \"./contactAction\";\r\n\r\nconst onAddContact = (state, { payload }) => [payload, ...state];\r\nconst onRemoveContact = (state, { payload }) =>\r\n  state.filter(({ id }) => id !== payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactAction.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [contactAction.addContactsSuccess]: onAddContact,\r\n  [contactAction.removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactAction.fetchContactsRequest]: () => true,\r\n  [contactAction.fetchContactsSuccess]: () => false,\r\n  [contactAction.fetchContactsError]: () => false,\r\n  [contactAction.addContactsRequest]: () => true,\r\n  [contactAction.addContactsSuccess]: () => false,\r\n  [contactAction.addContactsError]: () => false,\r\n  [contactAction.removeContactsRequest]: () => true,\r\n  [contactAction.removeContactsSuccess]: () => false,\r\n  [contactAction.removeContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport authActions from \"./authActions\";\r\n\r\nconst INITIAL_USER = { name: null, email: null };\r\n\r\nconst user = createReducer(INITIAL_USER, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => INITIAL_USER,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingUser = createReducer(false, {\r\n  [authActions.registerRequest]: () => true,\r\n  [authActions.registerSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, token, error, loadingUser });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  persistReducer,\r\n  persistStore,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"../redux/contacts/contactReducer\";\r\nimport authReducer from \"../redux/auth/authReducer\";\r\n\r\nconst authPersisstCOnfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    auth: persistReducer(authPersisstCOnfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport App from \"./components/App.js\";\r\n\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from \"axios\";\r\nimport authActions from \"../redux/auth/authActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  await axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      console.log(response);\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst login = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  await axios\r\n    .post(\"/users/login\", credentials)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.loginSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nconst logout = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  await axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error.message)));\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  await axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => {\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(authActions.getCurrentUserError(error.message)));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contact/changeFilter\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n\r\n  changeFilter,\r\n};\r\n"],"sourceRoot":""}